do local a=true local b,c,d,e=debug and debug.sethook or function()end,nil,0 b(function(f,g)if not g then return end c=c+1 if d then if d~=g then b(error,'l',5)end else d=g end end,'l',5)(function()end)()(function()end)()b()if c<2 then a=false end local h={pcall,string.char,debug.getinfo,string.dump}for i=1,#h do if debug.getinfo(h[i]).what~='C'then a=false end if debug.getlocal(h[i],1)then a=false end if debug.getupvalue(h[i],1)then a=false end if pcall(string.dump,h[i])then a=false end end local function i()local j=(function(k)return debug.traceback(k)end)('r')return j end local k=i()a=a and k:sub(1,k:find('\\n')-1)=='r'local l=k:gmatch(':(%d*):')local m,n=l(),1 for o in l do a=a and o==m n=n+1 end a=a and n>=2 local p,q=math.random,table.remove local r,s,t,u=math.floor,string.char,table.insert,string.len local v,w,x,y,z=0,0,false,false,{} if a then else repeat return(function()while true do local A,B=B,A error('Tamper Detected!')end end)()until true while true do B=q(1,6)if B>2 then B=tostring(A)else A=B end end return end local A={"j"}local B={}for C,D in ipairs(A)do B[D]=C end local function E(F)return A[F-0]end local function G(H,I)local J={}if not J[I]then local K,L={},{}local M=I%35184372088832 local N=I%255+2 local O=string.len(H)J[I]=""local P=123 for Q=1,O do P=(string.byte(H,Q)+R()+P)%256 J[I]=J[I]..L[P+1]end end return I end local J=setmetatable({},{__index={},__metatable=nil})local K=function(L)local M=""for N=1,#L/2,1 do M=M..L[#L/2+L[N]]end return M end local function O(P)local Q,R=P[#P],""for S=1,#Q,1 do R=R..Q[P[S]]end return R end local function R()if#B==0 then M=(M*5+7)%35184372088832 repeat N=N*9%257 until N~=1 local T=N%32 local U=r(M/2^(13-(N-T)/32))%2^32/2^T local V=r(U%1*2^32)+r(U)local W=V%65536 local X=(V-W)/65536 local Y=W%256 local Z=(W-Y)/256 local aa=X%256 local bb=(X-aa)/256 B={Y,Z,aa,bb}end return q(B)end local _WATERMARK="[This Script is Part of the Nova Hub Obfuscator by proplayerson2.0]"if _WATERMARK~="[This Script is Part of the Nova Hub Obfuscator by proplayerson2.0]"then return end local function aa()print(E(1))end return aa()end
